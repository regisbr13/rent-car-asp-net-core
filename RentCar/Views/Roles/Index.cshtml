@model RentCar.Models.ViewModels.UsersRoleViewModel

@{
    ViewData["Title"] = "Níveis de Acesso";
}

<br />

<div class="border border-light rounded shadow">
    <div class="container">
        <p class="text-info h4">
            <i class="fas fa-user-lock fa-lg"></i> Níveis de acesso
            <button class="btn btn-outline-info createRole" data-toggle="tooltip" data-placement="right" title="Novo nível de acesso"><i class="fas fa-plus-circle fa-lg"></i></button>
        </p>
        @{
            if (TempData["confirm"] != null)
            {
                <p class="alert alert-success h6">
                    @TempData["confirm"]
                </p>
            }
            else if (TempData["erro"] != null)
            {
                <p class="alert alert-danger h6">
                    @TempData["erro"]
                </p>
            }
        }

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">
                        Nome
                    </th>
                    <th scope="col">
                        Descrição
                    </th>
                    <th scope="col">Opções</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Roles)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            <button class="btn btn-outline-primary editRole" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Atualizar nível de acesso"><i class="fas fa-edit"></i></button>
                            <button class="btn btn-outline-danger delRole" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Excluir nível de acesso"><i class="fas fa-trash"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<br />
<div class="border border-light rounded shadow">
    <div class="container">
        <p class="text-info h4">
            <i class="fas fa-user-lock fa-lg"></i> Definir nível de acesso para usuário:
        </p>

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">
                        Usuário
                    </th>
                    <th scope="col">
                        Nível de acesso
                    </th>
                    <th scope="col">Opções</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Users)
                {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Model.RoleNames.GetValueOrDefault(item.Id)
                            </td>
                            <td>
                                <button class="btn btn-outline-primary editUserRole" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Mudar nível de acesso"><i class="fas fa-layer-group"></i></button>
                                <button class="btn btn-outline-danger delUser" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Excluir usuário"><i class="fas fa-trash"></i></button>
                            </td>
                        </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"></div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
